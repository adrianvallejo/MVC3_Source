<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AntiForgeryToken_ValidationFailed" xml:space="preserve">
    <value>A required anti-forgery token was not supplied or was invalid.</value>
  </data>
  <data name="ApplicationPart_ModuleAlreadyRegistered" xml:space="preserve">
    <value>The assembly "{0}" is already registered.</value>
  </data>
  <data name="ApplicationPart_ModuleAlreadyRegisteredForVirtualPath" xml:space="preserve">
    <value>An application module is already registered for virtual path "{0}".</value>
  </data>
  <data name="ApplicationPart_ModuleCannotBeFound" xml:space="preserve">
    <value>Unable to find an application module with the name "{0}".</value>
  </data>
  <data name="ApplicationPart_ModuleNotRegistered" xml:space="preserve">
    <value>The assembly "{0}" is not a registered application module.</value>
  </data>
  <data name="ApplicationPart_ResourceNotFound" xml:space="preserve">
    <value>The resource file "{0}" could not be found.</value>
  </data>
  <data name="DataHelpers_ConnectionStringNotFound" xml:space="preserve">
    <value>Connection string "{0}" could not be found.</value>
  </data>
  <data name="DataHelpers_FileNotFound" xml:space="preserve">
    <value>Unable to locate file "{0}" in the "~/App_Data" folder.</value>
  </data>
  <data name="DynamicDictionary_InvalidNumberOfIndexes" xml:space="preserve">
    <value>Index length must be exactly one.</value>
  </data>
  <data name="DynamicHttpApplicationState_UseOnlyStringOrIntToGet" xml:space="preserve">
    <value>Index must be of type string or int when getting a value.</value>
  </data>
  <data name="DynamicHttpApplicationState_UseOnlyStringToSet" xml:space="preserve">
    <value>Index must be of type string when setting a value.</value>
  </data>
  <data name="HtmlHelper_ConversionThrew" xml:space="preserve">
    <value>The parameter conversion from type "{0}" to type "{1}" failed. See the inner exception for more information.</value>
  </data>
  <data name="HtmlHelper_NoConverterExists" xml:space="preserve">
    <value>The parameter conversion from type "{0}" to type "{1}" failed because no type converter can convert between these types.</value>
  </data>
  <data name="HtmlHelper_WrongSelectDataType" xml:space="preserve">
    <value>The ViewData item that has the key "{0}" is of type "{1}" but must be of type "{2}".</value>
  </data>
  <data name="HttpContextUnavailable" xml:space="preserve">
    <value>An HttpContext is required to perform this operation. Check that this operation is being performed during a web request.</value>
  </data>
  <data name="StateStorage_RequestScopeNotAvailable" xml:space="preserve">
    <value>RequestScope cannot be created when _AppStart is executing.</value>
  </data>
  <data name="StateStorage_ScopeIsReadOnly" xml:space="preserve">
    <value>Storage scope is read only.</value>
  </data>
  <data name="StateStorage_StorageScopesCannotBeCreated" xml:space="preserve">
    <value>Storage scopes cannot be created when _AppStart is executing.</value>
  </data>
  <data name="UrlData_ReadOnly" xml:space="preserve">
    <value>The UrlData collection is read-only.</value>
  </data>
  <data name="WebPageRoute_UnderscoreBlocked" xml:space="preserve">
    <value>Files with leading underscores ("_") cannot be served.</value>
  </data>
  <data name="WebPage_CannotRequestDirectly" xml:space="preserve">
    <value>The file "{0}" cannot be requested directly because it calls the "{1}" method.</value>
  </data>
  <data name="WebPage_FileNotSupported" xml:space="preserve">
    <value>The following file could not be rendered because its extension "{0}" might not be supported: "{1}".</value>
  </data>
  <data name="WebPage_InvalidPageType" xml:space="preserve">
    <value>The file "{0}" could not be rendered, because it does not exist or is not a valid page.</value>
  </data>
  <data name="WebPage_LayoutPageNotFound" xml:space="preserve">
    <value>The layout page "{0}" could not be found at the following path: "{1}".</value>
  </data>
  <data name="WebPage_RenderBodyAlreadyCalled" xml:space="preserve">
    <value>The "RenderBody" method has already been called.</value>
  </data>
  <data name="WebPage_RenderBodyNotCalled" xml:space="preserve">
    <value>The "RenderBody" method has not been called for layout page "{0}".</value>
  </data>
  <data name="WebPage_SectionAleadyDefined" xml:space="preserve">
    <value>Section already defined: "{0}".</value>
  </data>
  <data name="WebPage_SectionAleadyRendered" xml:space="preserve">
    <value>The "RenderSection" method has already been called for the section named "{0}".</value>
  </data>
  <data name="WebPage_SectionNotDefined" xml:space="preserve">
    <value>Section not defined: "{0}".</value>
  </data>
  <data name="WebPage_SectionsNotRendered" xml:space="preserve">
    <value>The following sections have been defined but have not been rendered for the layout page "{0}": "{1}".</value>
  </data>
</root>